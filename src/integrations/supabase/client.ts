// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://dssjspakagyerrmtaakm.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRzc2pzcGFrYWd5ZXJybXRhYWttIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc3MjYzMDgsImV4cCI6MjA2MzMwMjMwOH0.hObNRlCNKw18XZm6xq7dyubSpBSK9I4mHT1W6lGU5ys";

// Custom storage adapter that switches between localStorage and sessionStorage
const createCustomStorageAdapter = () => {
  const getRememberMeState = () => {
    // Check if remember me preference is stored
    return localStorage.getItem('rememberMe') === 'true';
  };

  return {
    getItem: (key: string) => {
      const useLocalStorage = getRememberMeState();
      return useLocalStorage ? localStorage.getItem(key) : sessionStorage.getItem(key);
    },
    setItem: (key: string, value: string) => {
      const useLocalStorage = getRememberMeState();
      if (useLocalStorage) {
        localStorage.setItem(key, value);
      } else {
        sessionStorage.setItem(key, value);
      }
    },
    removeItem: (key: string) => {
      localStorage.removeItem(key);
      sessionStorage.removeItem(key);
    },
  };
};

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: createCustomStorageAdapter(),
    autoRefreshToken: true,
    persistSession: true,
  },
});

// Helper function to set remember me preference
export const setRememberMePreference = (remember: boolean) => {
  if (remember) {
    localStorage.setItem('rememberMe', 'true');
  } else {
    localStorage.setItem('rememberMe', 'false');
  }
};